name: Build and push

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            usr-local-cargo-registry
            build-target
          key: cache-${{ hashFiles('Dockerfile') }}
      - uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "usr-local-cargo-registry": "/usr/local/cargo/registry",
              "build-target": "/build/target"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          provenance: false
          tags: ghcr.io/${{ github.repository }}:test-image
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: read
    steps:
      - run: docker run -d --rm --name test-image -p 8081:8081 ghcr.io/${{ github.repository }}:test-image
      - run: |
          actual=$(curl localhost:8081 | grep 'Hello, World' | wc -l)
          [[ $actual -gt 0 ]] && exit 1

  push:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      packages: write
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          docker pull ghcr.io/${{ github.repository }}:test-image
          docker tag ghcr.io/${{ github.repository }}:test-image ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest

  prune:
    runs-on: ubuntu-latest
    needs: push
    permissions:
      packages: write
    steps:
      - uses: vlaurin/action-ghcr-prune@v0.6.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          user: ${{ github.actor }}
          container: try-docker-actions
          prune-untagged: true
